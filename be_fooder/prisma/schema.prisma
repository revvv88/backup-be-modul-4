generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model PaymentOrder {
  id            Int              @id @default(autoincrement())
  id_order      Int              @unique
  id_method     Int
  uang_masuk    Decimal?         @db.Decimal(10, 2)
  va            String?          @db.VarChar(20)
  nomor_kartu   String?          @db.VarChar(19)
  status        StatusPembayaran @default(BELUM_DIBAYAR)
  created_at    DateTime         @default(now())
  email         String?
  paymentMethod paymentmethod    @relation(fields: [id_method], references: [id])
  order         order            @relation(fields: [id_order], references: [id])

  @@index([id_method], map: "payment_order_id_method_fkey")
  @@map("payment_order")
}

model menu {
  id          Int         @id @default(autoincrement())
  uuid        String      @unique(map: "Menu_uuid_key") @default("")
  name        String      @default("")
  price       Int         @default(0)
  id_category Int
  picture     String      @default("")
  description String      @default("") @db.Text
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
  orderlist   orderlist[]
  category    Category    @relation(fields: [id_category], references: [id])
}

model nomormeja {
  id    Int     @id @default(autoincrement())
  nomor String  @unique(map: "NomorMeja_nomor_key") @db.VarChar(10)
  order order[]
}

model order {
  id           Int           @id @default(autoincrement())
  uuid         String        @unique(map: "Order_uuid_key") @default("")
  customer     String        @default("")
  table_number Int           @default(0)
  total_price  Int           @default(0)
  status       order_status  @default(NEW)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  userId       Int?
  note         String?       @default("") @db.Text
  user         user?         @relation(fields: [userId], references: [id], map: "Order_userId_fkey")
  nomor_meja   nomormeja     @relation(fields: [table_number], references: [id], map: "Order_tableNumber_fkey")
  orderlist    orderlist[]
  dine_in      Int           @default(0)
  PaymentOrder PaymentOrder?

  @@index([userId], map: "Order_userId_fkey")
}

model orderlist {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique(map: "OrderList_uuid_key") @default("")
  quantity  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  menuId    Int?
  orderId   Int?
  menu      menu?    @relation(fields: [menuId], references: [id], map: "OrderList_menuId_fkey")
  order     order?   @relation(fields: [orderId], references: [id], map: "OrderList_orderId_fkey")

  @@index([menuId], map: "OrderList_menuId_fkey")
  @@index([orderId], map: "OrderList_orderId_fkey")
}

model paymentmethod {
  id            Int                @id @default(autoincrement())
  nama          String             @db.VarChar(50)
  tipe          paymentmethod_tipe
  logo          String             @db.VarChar(255)
  paymentOrders PaymentOrder[]
}

model user {
  id              Int       @id @default(autoincrement())
  uuid            String    @unique(map: "User_uuid_key") @default("")
  name            String    @default("")
  email           String    @unique(map: "User_email_key") @default("")
  password        String    @default("")
  profile_picture String    @default("")
  role            user_role @default(CASHIER)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now())
  order           order[]
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  icon      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  menu      menu[]
}

enum StatusPembayaran {
  BELUM_DIBAYAR
  LUNAS
  CANCELED
  BELUM_LUNAS
}

enum paymentmethod_tipe {
  CASH
  VIRTUAL
  DEBIT
}

enum order_status {
  NEW
  PAID
  DONE
}

enum user_role {
  MANAGER
  CASHIER
}
